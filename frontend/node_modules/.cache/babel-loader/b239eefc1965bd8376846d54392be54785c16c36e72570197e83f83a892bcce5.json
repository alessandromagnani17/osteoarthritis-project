{"ast":null,"code":"import { ref } from 'vue';\nimport axios from 'axios';\nexport default {\n  name: 'UserRegister',\n  setup() {\n    const form = ref({\n      username: '',\n      name: '',\n      password: ''\n    });\n    const onSubmit = async () => {\n      try {\n        const response = await axios.post('http://localhost:3000/api/users/register', form.value);\n        alert('Registrazione avvenuta con successo');\n        console.log('User registered:', response.data);\n        form.value = {\n          username: '',\n          name: '',\n          password: ''\n        }; // Resetta il form\n      } catch (error) {\n        console.error('Registration error:', error.response ? error.response.data : error.message);\n        alert('Errore nella registrazione');\n      }\n    };\n    return {\n      form,\n      onSubmit\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","name","setup","form","username","password","onSubmit","response","post","value","alert","console","log","data","error","message"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/asw-project/frontend/my-vue-app/src/components/UserRegister.vue"],"sourcesContent":["<!-- src/components/UserRegister.vue -->\n<template>\n  <div class=\"container mt-5\">\n    <h2 class=\"mb-4\">Registrati</h2>\n    <form @submit.prevent=\"onSubmit\" class=\"needs-validation\" novalidate>\n      <div class=\"mb-3\">\n        <label for=\"username\" class=\"form-label\">Username</label>\n        <input v-model=\"form.username\" id=\"username\" type=\"text\" class=\"form-control\" required />\n        <div class=\"invalid-feedback\">Inserisci un username valido.</div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"name\" class=\"form-label\">Nome</label>\n        <input v-model=\"form.name\" id=\"name\" type=\"text\" class=\"form-control\" required />\n        <div class=\"invalid-feedback\">Inserisci il tuo nome.</div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"password\" class=\"form-label\">Password</label>\n        <input v-model=\"form.password\" id=\"password\" type=\"password\" class=\"form-control\" required />\n        <div class=\"invalid-feedback\">Inserisci una password valida.</div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Registrati</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport axios from 'axios';\n\nexport default {\n  name: 'UserRegister',\n  setup() {\n    const form = ref({\n      username: '',\n      name: '',\n      password: ''\n    });\n\n    const onSubmit = async () => {\n      try {\n        const response = await axios.post('http://localhost:3000/api/users/register', form.value);\n        alert('Registrazione avvenuta con successo');\n        console.log('User registered:', response.data);\n        form.value = { username: '', name: '', password: '' }; // Resetta il form\n      } catch (error) {\n        console.error('Registration error:', error.response ? error.response.data : error.message);\n        alert('Errore nella registrazione');\n      }\n    };\n\n    return { form, onSubmit };\n  }\n};\n</script>\n\n<style scoped>\n/* Aggiungi stili personalizzati qui se necessario */\n</style>\n"],"mappings":"AA0BA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAIJ,GAAG,CAAC;MACfK,QAAQ,EAAE,EAAE;MACZH,IAAI,EAAE,EAAE;MACRI,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,QAAO,GAAI,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,IAAI,CAAC,0CAA0C,EAAEL,IAAI,CAACM,KAAK,CAAC;QACzFC,KAAK,CAAC,qCAAqC,CAAC;QAC5CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEL,QAAQ,CAACM,IAAI,CAAC;QAC9CV,IAAI,CAACM,KAAI,GAAI;UAAEL,QAAQ,EAAE,EAAE;UAAEH,IAAI,EAAE,EAAE;UAAEI,QAAQ,EAAE;QAAG,CAAC,EAAE;MACzD,EAAE,OAAOS,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACP,QAAO,GAAIO,KAAK,CAACP,QAAQ,CAACM,IAAG,GAAIC,KAAK,CAACC,OAAO,CAAC;QAC1FL,KAAK,CAAC,4BAA4B,CAAC;MACrC;IACF,CAAC;IAED,OAAO;MAAEP,IAAI;MAAEG;IAAS,CAAC;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}