{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport axios from '../axiosConfig';\nexport default {\n  name: 'UserRegister',\n  setup() {\n    const form = ref({\n      username: '',\n      name: '',\n      password: ''\n    });\n    const errors = ref({\n      username: '',\n      name: '',\n      password: ''\n    });\n    const router = useRouter();\n    const validateForm = () => {\n      errors.value = {\n        username: form.value.username ? '' : 'Username is required',\n        name: form.value.name ? '' : 'Name is required',\n        password: form.value.password ? '' : 'Password is required'\n      };\n      return Object.values(errors.value).every(error => !error);\n    };\n    const onSubmit = async () => {\n      if (!validateForm()) return;\n      try {\n        const response = await axios.post('/api/users/register', form.value);\n        alert('Registration successful!');\n        console.log('User registered:', response.data);\n        form.value = {\n          username: '',\n          name: '',\n          password: ''\n        };\n        router.push({\n          name: 'Welcome',\n          query: {\n            username: response.data.username\n          }\n        });\n      } catch (error) {\n        console.error('Registration error:', error); // Log completo dell'errore\n        let errorMessage = 'An unknown error occurred.';\n        if (error.response) {\n          // Risposta dal server\n          const {\n            status,\n            data\n          } = error.response;\n          console.error('Response status:', status);\n          console.error('Response data:', data);\n          if (data && data.message) {\n            errorMessage = data.message;\n          } else {\n            errorMessage = `Error: ${status}`;\n          }\n        } else if (error.request) {\n          // Richiesta effettuata ma senza risposta\n          console.error('Request made but no response received:', error.request);\n          errorMessage = 'No response from server.';\n        } else {\n          // Qualcosa è andato storto nella configurazione della richiesta\n          console.error('Error setting up request:', error.message);\n          errorMessage = `Request setup error: ${error.message}`;\n        }\n        alert(`Error in registration: ${errorMessage}`);\n      }\n    };\n    return {\n      form,\n      onSubmit,\n      errors\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","axios","name","setup","form","username","password","errors","router","validateForm","value","Object","values","every","error","onSubmit","response","post","alert","console","log","data","push","query","errorMessage","status","message","request"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/asw-project/frontend/src/components/UserRegister.vue"],"sourcesContent":["<template>\n  <div class=\"register\">\n    <div class=\"container mt-5\">\n      <h2 class=\"mb-4\">Create Your Account</h2>\n      <form @submit.prevent=\"onSubmit\" class=\"needs-validation\" novalidate>\n        <div class=\"mb-3\">\n          <label for=\"username\" class=\"form-label\">Username</label>\n          <input v-model=\"form.username\" id=\"username\" type=\"text\" class=\"form-control\" :class=\"{'is-invalid': errors.username}\" required />\n          <div class=\"invalid-feedback\">{{ errors.username }}</div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"name\" class=\"form-label\">Full Name</label>\n          <input v-model=\"form.name\" id=\"name\" type=\"text\" class=\"form-control\" :class=\"{'is-invalid': errors.name}\" required />\n          <div class=\"invalid-feedback\">{{ errors.name }}</div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"password\" class=\"form-label\">Password</label>\n          <input v-model=\"form.password\" id=\"password\" type=\"password\" class=\"form-control\" :class=\"{'is-invalid': errors.password}\" required />\n          <div class=\"invalid-feedback\">{{ errors.password }}</div>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport axios from '../axiosConfig';\n\nexport default {\n  name: 'UserRegister',\n  setup() {\n    const form = ref({\n      username: '',\n      name: '',\n      password: ''\n    });\n\n    const errors = ref({\n      username: '',\n      name: '',\n      password: ''\n    });\n\n    const router = useRouter();\n\n    const validateForm = () => {\n      errors.value = {\n        username: form.value.username ? '' : 'Username is required',\n        name: form.value.name ? '' : 'Name is required',\n        password: form.value.password ? '' : 'Password is required'\n      };\n      return Object.values(errors.value).every(error => !error);\n    };\n\n    const onSubmit = async () => {\n      if (!validateForm()) return;\n\n      try {\n        const response = await axios.post('/api/users/register', form.value);\n        alert('Registration successful!');\n        console.log('User registered:', response.data);\n        form.value = { username: '', name: '', password: '' };\n        router.push({ name: 'Welcome', query: { username: response.data.username } });\n      } catch (error) {\n        console.error('Registration error:', error); // Log completo dell'errore\n        let errorMessage = 'An unknown error occurred.';\n\n        if (error.response) {\n          // Risposta dal server\n          const { status, data } = error.response;\n          console.error('Response status:', status);\n          console.error('Response data:', data);\n\n          if (data && data.message) {\n            errorMessage = data.message;\n          } else {\n            errorMessage = `Error: ${status}`;\n          }\n        } else if (error.request) {\n          // Richiesta effettuata ma senza risposta\n          console.error('Request made but no response received:', error.request);\n          errorMessage = 'No response from server.';\n        } else {\n          // Qualcosa è andato storto nella configurazione della richiesta\n          console.error('Error setting up request:', error.message);\n          errorMessage = `Request setup error: ${error.message}`;\n        }\n\n        alert(`Error in registration: ${errorMessage}`);\n      }\n    };\n\n    return { form, onSubmit, errors };\n  }\n};\n</script>\n\n\n<style scoped>\n.register {\n  background: linear-gradient(135deg, #f7f7f7, #e0e0e0);\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.container {\n  max-width: 600px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  animation: slideIn 1s ease-out;\n}\n\n@keyframes slideIn {\n  from {\n    transform: translateY(-30px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\nh2 {\n  font-size: 2.5rem;\n  color: #343a40;\n}\n\n.form-label {\n  color: #495057;\n}\n\n.invalid-feedback {\n  color: #dc3545;\n}\n\n.btn {\n  margin-top: 20px;\n  background-color: #007bff;\n  border: none;\n  transition: background-color 0.3s, transform 0.3s;\n}\n\n.btn:hover {\n  background-color: #0056b3;\n  transform: scale(1.05);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}